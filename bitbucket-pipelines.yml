image: node:16

clone:
  lfs: true
  depth: 1

pipelines:
  pull-requests:
    '**':
      - step:
            name: Test & Build
            caches:
              - node
            script:
              - npm ci --no-audit --no-progress
              - cp deploy/config/internal/.env.alpha ./.env
              - npm test -- --coverage
              - npm run build

  custom:

    deploy:
    - variables:
          - name: KIDSLOOP_REGION
          - name: KIDSLOOP_ENV
          - name: KIDSLOOP_PASS_ENV
    
    - step:
        name: 'Clone Kidsloop Pass'    
        image: node:lts
        script:
          - git submodule update --init --recursive --force
        artifacts:
         - src/pages/account/kidsloop-pass-frontend/**

    - step:
        name: 'Build NPM'
        image: node:lts
        script:
          - npm ci
          - cp deploy/config/$KIDSLOOP_REGION/.env.$KIDSLOOP_ENV ./.env
          - npm run build
        caches:
          - nodemodules
        artifacts:
         - dist/*
         - src/pages/account/kidsloop-pass-frontend/**

    - step:
        name: 'Build Kidsloop Pass'
        image: node:lts
        script:
          - cd src/pages/account/kidsloop-pass-frontend/client
          # `npm install` runs git clone for `kidsloop-branding`, without `git init` it fails with
          # "npm ERR! fatal: Not a git repository: ../../../../.git/modules/src/pages/account/kidsloop-pass-frontend"
          - git init
          - npm i
          - npm run build:$KIDSLOOP_PASS_ENV
        caches:
          - accountnodemodules
        artifacts:
          - dist/*
          - src/pages/account/kidsloop-pass-frontend/client/dist/*

    - step:
        name: "Build & Push Docker image"
        image: python:3.9-alpine
        script:
          - pip3 install -U awscli
          - mv src/pages/account/kidsloop-pass-frontend/client/dist ./dist/account
          - mv dist deploy/

          - export BRANCH_TAG=$(echo "$BITBUCKET_BRANCH" | sed -E 's/([^0-9a-zA-Z]+)/-/g' | awk '{print tolower($0)}')
          - export REPO=$DOCKER_REPO_URL/kidsloop-auth-frontend   # DOCKER_REPO_URL is workspace wide variable
          - export COMMIT_TAG=$(echo $BITBUCKET_COMMIT | cut -c1-7)
          - if test -z "$BRANCH_TAG"; then export TAG=commit-$KIDSLOOP_REGION-$KIDSLOOP_ENV; else export TAG=$BRANCH_TAG-$KIDSLOOP_REGION-$KIDSLOOP_ENV; fi

          - aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin $DOCKER_REPO_URL
          - docker build -t auth-frontend deploy/
          
          - docker tag auth-frontend:latest $REPO:$TAG
          - docker tag auth-frontend:latest $REPO:$TAG-latest
          - docker tag auth-frontend:latest $REPO:$TAG-$BITBUCKET_BUILD_NUMBER
          - docker tag auth-frontend:latest $REPO:$TAG-$COMMIT_TAG

          - if test -n "$BRANCH_TAG"; then docker push $REPO:$TAG; fi
          - if test -n "$BRANCH_TAG"; then docker push $REPO:$TAG-latest; fi
          - docker push $REPO:$TAG-$BITBUCKET_BUILD_NUMBER
          - docker push $REPO:$TAG-$COMMIT_TAG

        services:
          - docker

    cypress-tests-SSO-chrome:
    - step: 
        name: 'UI Cypress Regression Tests - Chrome Browser On SSO'
        image: cypress/browsers:node16.5.0-chrome97-ff96
        script: 
        - npm i --no-audit --no-progress
        - npm run test:sso
        - npm run e2e:reports
        caches:
          - node
          - cypress
        artifacts:
        # store any generates images and videos as artifacts
          - cypress/screenshots/**
          - cypress/cucumber-json
          - cypress/videos/**  
          - test-reports/**
          - test-reports/cucumber-report/cucumber-htmlreport/index.html

    cypress-tests-SSO-iphone:
    - step: 
        name: 'UI Cypress Regression Tests - Iphone on Chrome Browser On SSO'
        image: cypress/browsers:node16.5.0-chrome97-ff96
        script: 
        - npm i --no-audit --no-progress
        - npm run test:sso:iphone
        - npm run e2e:reports
        caches:
          - node
          - cypress
        artifacts:
        # store any generates images and videos as artifacts
          - cypress/screenshots/**
          - cypress/cucumber-json
          - cypress/videos/**  
          - test-reports/**
          - test-reports/cucumber-report/cucumber-htmlreport/index.html

    cypress-tests-SSO-samsung10:
    - step: 
        name: 'UI Cypress Regression Tests - Samsung 10 screen on Chrome Browser'
        image: cypress/browsers:node16.5.0-chrome97-ff96
        script: 
        - npm i --no-audit --no-progress
        - npm run test:sso:samsung-s10
        - npm run e2e:reports
        caches:
          - node
          - cypress
        artifacts:
        # store any generates images and videos as artifacts
          - cypress/screenshots/**
          - cypress/cucumber-json
          - cypress/videos/**  
          - test-reports/**
          - test-reports/cucumber-report/cucumber-htmlreport/index.html

    cypress-tests-SSO-ipad:
    - step: 
        name: 'UI Cypress Regression Tests - ipad screen on Chrome Browser'
        image: cypress/browsers:node16.5.0-chrome97-ff96
        script: 
        - npm i --no-audit --no-progress
        - npm run test:sso:ipad
        - npm run e2e:reports
        caches:
          - node
          - cypress
        artifacts:
        # store any generates images and videos as artifacts
          - cypress/screenshots/**
          - cypress/cucumber-json
          - cypress/videos/**  
          - test-reports/**    

  branches:
    '{main,dev,hotfix/**,feature/factory-build}':
    - step:
        name: "Build & Push Factory Image"
        image: python:3.9-alpine
        script:
          - pip3 install -U awscli
          - apk add git jq openssh
          - git submodule update --init --recursive --force
          - export BRANCH_TAG=$(echo "$BITBUCKET_BRANCH" | sed -E 's/([^0-9a-zA-Z]+)/-/g' | awk '{print tolower($0)}')
          - export REPO=$DOCKER_REPO_URL/kidsloop-auth-frontend      # DOCKER_REPO_URL is workspace wide variable
          - export COMMIT_TAG=$(echo $BITBUCKET_COMMIT | cut -c1-7)
          - if test -z "$BRANCH_TAG"; then export TAG=commit-$KIDSLOOP_REGION-$KIDSLOOP_ENV; else export TAG=$BRANCH_TAG-$KIDSLOOP_REGION-$KIDSLOOP_ENV; fi
          - export TAG=factory-$TAG
          - aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin $DOCKER_REPO_URL
          - SSH_PRIVATE_KEY_BITBUCKET_B64=$(cat /opt/atlassian/pipelines/agent/ssh/id_rsa | base64)
          - Version="$(git describe --tags)" Tag="$(git rev-parse --short HEAD)"; jq --arg version "$Version" --arg tag "$Tag" "{\"Version\":\"$Version\",\"Commit\":\"$Tag\"}" --raw-output --null-input > version.txt
          - docker --version
          - >
            docker build
            --build-arg SSH_PRIVATE_KEY_BITBUCKET_B64="$SSH_PRIVATE_KEY_BITBUCKET_B64"
            -t auth-frontend-factory
            -f deploy/factory_bitbucket.dockerfile
            .

          - docker tag auth-frontend-factory:latest $REPO:$TAG
          - docker tag auth-frontend-factory:latest $REPO:$TAG-latest
          - docker tag auth-frontend-factory:latest $REPO:$TAG-$BITBUCKET_BUILD_NUMBER
          - docker tag auth-frontend-factory:latest $REPO:$TAG-$COMMIT_TAG

          - if test -n "$BRANCH_TAG"; then docker push $REPO:$TAG; fi
          - if test -n "$BRANCH_TAG"; then docker push $REPO:$TAG-latest; fi
          - docker push $REPO:$TAG-$BITBUCKET_BUILD_NUMBER
          - docker push $REPO:$TAG-$COMMIT_TAG
          - echo "Pushed $REPO:$TAG-$BITBUCKET_BUILD_NUMBER and $REPO:$TAG-$COMMIT_TAG to ECR."
        after-script:
        - BUILD_STATUS="success"
        - if [[ $BITBUCKET_EXIT_CODE -ne 0 ]]; then BUILD_STATUS="failure"; fi
        - pipe: atlassian/slack-notify:1.0.2
          variables:
            WEBHOOK_URL: $WEBHOOK_URL
            PRETEXT: '"[Alpha] $BITBUCKET_REPO_SLUG - Pipeline ${BITBUCKET_GIT_HTTP_ORIGIN}/addon/pipelines/home#!/results/${BITBUCKET_BUILD_NUMBER}"'
            MESSAGE: '"auth-frontend-web" factory image push has exited with [$BUILD_STATUS] status'
        services:
          - docker
        caches:
          - apk
          - pip
          - docker

definitions:
  caches:
    nodemodules: ./node_modules
    accountnodemodules: ./src/pages/account/kidsloop-pass-frontend/client/node_modules
    cypress: $HOME/.cache/Cypress
    apk: /var/cache/apk
    pip: ~/.cache/pip
