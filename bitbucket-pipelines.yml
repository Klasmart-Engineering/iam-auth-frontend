image: node:16

definitions:
    caches:
        nodemodules: ./node_modules
        accountnodemodules: ./src/pages/account/kidsloop-pass-frontend/client/node_modules
        cypress: $HOME/.cache/Cypress
    steps:
        - step: &install-dependencies
              name: Install npm dependencies (no cache)
              caches:
                  - node
                  - cypress
              script:
                  - npm ci --no-progress --no-audit
        - step: &checks
              name: Check JS
              caches:
                  - node
              script:
                  - npm run check
        - step: &test
              name: Test
              caches:
                  - node
              script:
                  - npm test -- --coverage
        - step: &load-env-sso
              name: Load sso .env file
              script:
                  - cp deploy/config/internal/.env.sso .env
              artifacts:
                  download: false
                  paths:
                      - .env
        - step: &load-env-alpha
              name: Load alpha .env file
              script:
                  - cp deploy/config/internal/.env.alpha .env
              artifacts:
                  download: false
                  paths:
                      - .env
        - step: &build
              name: Build
              caches:
                  - node
              script:
                  - npm run build
              artifacts:
                  paths:
                      - dist/*
        - step: &deploy-to-alpha
              name: "Deploy to alpha"
              image: python:3.9-alpine
              script:
                  - pip3 install -U awscli
                  - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_ALPHA_OLD
                  - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_ALPHA_OLD
                  - aws s3 sync dist s3://$S3_BUCKET/latest
                  - aws cloudfront create-invalidation --paths "/*" --distribution-id $DISTRIBUTION_ID
              deployment: internal-alpha
              caches:
                  - pip
        - step: &cypress-tests
              name: "UI Cypress Regression Tests - Chrome Browser - $ENVIRONMENT environment - $VIEWPORT viewport"
              image: cypress/browsers:node16.5.0-chrome97-ff96
              script:
                  - npx cypress install
                  - npm run test:$ENVIRONMENT:$VIEWPORT
                  - npm run e2e:reports
              caches:
                  - cypress
                  - node
              artifacts:
                  # store any generates images and videos as artifacts
                  - cypress/screenshots/**
                  - cypress/cucumber-json
                  - cypress/videos/**
                  - test-reports/**
                  - test-reports/cucumber-report/cucumber-htmlreport/index.html
        - step: &cypress-tests-alpha
              name: "UI Cypress Regression Tests - Chrome Browser - alpha environment - default viewport"
              image: cypress/browsers:node16.5.0-chrome97-ff96
              script:
                  - npx cypress install
                  - npm run test:alpha:default
                  - npm run e2e:reports
              caches:
                  - cypress
                  - node
              artifacts:
                  # store any generates images and videos as artifacts
                  - cypress/screenshots/**
                  - cypress/cucumber-json
                  - cypress/videos/**
                  - test-reports/**
                  - test-reports/cucumber-report/cucumber-htmlreport/index.html
clone:
    lfs: true

pipelines:
    branches:
        dev:
            - step: *install-dependencies
            - step: *checks
            - step: *test
            - step: *load-env-alpha
            - step: *build
            - step: *deploy-to-alpha
            - step: *cypress-tests-alpha

    pull-requests:
        "**":
            - step: *install-dependencies
            - step: *checks
            - step: *test
            - step: *load-env-alpha
            - step: *build

    custom:
        deploy:
            - variables:
                  - name: KIDSLOOP_REGION
                  - name: KIDSLOOP_ENV
                  - name: KIDSLOOP_PASS_ENV

            - step:
                  name: "Clone Kidsloop Pass"
                  image: node:lts
                  script:
                      - git submodule update --init --recursive --force
                  artifacts:
                      - src/pages/account/kidsloop-pass-frontend/**

            - step:
                  name: "Build NPM"
                  image: node:lts
                  script:
                      - npm ci
                      - cp deploy/config/$KIDSLOOP_REGION/.env.$KIDSLOOP_ENV ./.env
                      - npm run build
                  caches:
                      - nodemodules
                  artifacts:
                      - dist/*
                      - src/pages/account/kidsloop-pass-frontend/**

            - step:
                  name: "Build Kidsloop Pass"
                  image: node:lts
                  script:
                      - cd src/pages/account/kidsloop-pass-frontend/client
                      # `npm install` runs git clone for `kidsloop-branding`, without `git init` it fails with
                      # "npm ERR! fatal: Not a git repository: ../../../../.git/modules/src/pages/account/kidsloop-pass-frontend"
                      - git init
                      - npm i
                      - npm run build:$KIDSLOOP_PASS_ENV
                  caches:
                      - accountnodemodules
                  artifacts:
                      - dist/*
                      - src/pages/account/kidsloop-pass-frontend/client/dist/*

            - step:
                  name: "Build & Push Docker image"
                  image: python:3.9-alpine
                  script:
                      - pip3 install -U awscli
                      - mv src/pages/account/kidsloop-pass-frontend/client/dist ./dist/account
                      - mv dist deploy/

                      - export BRANCH_TAG=$(echo "$BITBUCKET_BRANCH" | sed -E 's/([^0-9a-zA-Z]+)/-/g' | awk '{print tolower($0)}')
                      - export REPO=$DOCKER_REPO_URL/kidsloop-auth-frontend # DOCKER_REPO_URL is workspace wide variable
                      - export COMMIT_TAG=$(echo $BITBUCKET_COMMIT | cut -c1-7)
                      - if test -z "$BRANCH_TAG"; then export TAG=commit-$KIDSLOOP_REGION-$KIDSLOOP_ENV; else export TAG=$BRANCH_TAG-$KIDSLOOP_REGION-$KIDSLOOP_ENV; fi

                      - aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin $DOCKER_REPO_URL
                      - docker build -t auth-frontend deploy/

                      - docker tag auth-frontend:latest $REPO:$TAG
                      - docker tag auth-frontend:latest $REPO:$TAG-latest
                      - docker tag auth-frontend:latest $REPO:$TAG-$BITBUCKET_BUILD_NUMBER
                      - docker tag auth-frontend:latest $REPO:$TAG-$COMMIT_TAG

                      - if test -n "$BRANCH_TAG"; then docker push $REPO:$TAG; fi
                      - if test -n "$BRANCH_TAG"; then docker push $REPO:$TAG-latest; fi
                      - docker push $REPO:$TAG-$BITBUCKET_BUILD_NUMBER
                      - docker push $REPO:$TAG-$COMMIT_TAG

                  services:
                      - docker

        cypress-tests:
            - variables:
                  - name: VIEWPORT
                    default: "default"
                  - name: ENVIRONMENT
                    default: "sso"
            - step:
                  <<: *install-dependencies
                  image: cypress/browsers:node16.5.0-chrome97-ff96
            - step: *cypress-tests
